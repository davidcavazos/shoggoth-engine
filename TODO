+ Implement OpenGL Core and shaders
+ Advanced lighting (spotlights and directional lights)
+ Debug camera
+ Viewport & Occlusion Culling (BulletPhysics DbvtCullingDemo)
+ In RigidBody, Camera and Light unregister commands if component is unregistered
~ Change SceneManager into static class
~ Move lists from managers to the actual object managed
~ Add more primitives (sphere, cilinder, cone, torus, etc)
~ Save input commands as a replay script
~ Read/write scene from XML
~ Use relative positions to the camera for physics and rendering
~ Debug Bullet physics renderer
~ Add constraints support
~ Add soft body support
~ Move scene manager to a proper manager
~ Check every constructor and destructor for memory leaks (static variables?)
- Change all pointers to references (where possible)
- Make input manager into a vector, only one can be active at a time (XML)
- Binding keys (or other inputs) with a command
- Possibility of multiple active cameras in different viewports
- Animations
- Be able to move rigidbodies with commands

BUGS:
Concave hulls in RigidBody crash!
A convex hull RigidBody randomly generates a 0 size low poly hull and crashes (original mesh read correctly)
